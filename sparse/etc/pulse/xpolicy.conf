# -------- xpolicy.conf --------------------------------------------------------
#
# Files are read in following order,
# 1) xpolicy.conf
# 2) xpolicy.conf.d/*.conf, in descending order
#
# Variables can be defined anywhere, and they affect all the conf files. Variables
# are updated if same variable is defined later on (for example variables in
# xpolicy.conf.d/xvars.conf are applied most likely latest and are the active
# ones). Variables can be used to replace any string configuration value
# (NOT match types, etc.). For example following stream definition is valid:
#
# [stream]
# property = $property_name@equals:$property_value
# group    = $group_name
#
# or for context definition following property action is valid:
# set-property = sink-name@equals:$sink, property:$string, value@constant:$value
#
# Other sections than [variable] can also be defined in any conf file, and already
# defined ones will be overridden by later definition.
#


# -------- Variable section ----------------------------------------------------

# Defaults. To override define variables with new values
# in xpolicy.conf.d directory (for example xpolicy.conf.d/xvars.conf).
[variable]
input_equals = "true"
output_equals = "true"
voip_equals = "true"

# inputs and outputs
input_builtin = droid.input.builtin
input_external = droid.input.external
output_low_latency = droid.output.low_latency
output_media_latency = droid.output.media_latency
output_primary = droid.output.primary

# input and output ports
input_wired_headset = input-wired_headset
input_voice_call = input-voice_call
output_earpiece = output-earpiece
output_speaker = output-speaker
output_wired_headphone = output-wired_headphone
output_wired_headset = output-wired_headset

# sinks, sources and ports
source_input_microphone = input-builtin_mic
source_input_backmicrophone = input-back_mic
source_input_fmradio = input-fm_tuner
sink_port_change_delay = delayed_port_change
sink_class_voip = $output_media_latency
delay_time = 150
# default to single output, if you know your device can support simultaneous
# output change these in xvars.conf.
twin_speaker_headset = $output_speaker
twin_speaker_headphone = $output_speaker
twin_speaker_lineout = $output_speaker
# cards and profiles
card = droid_card.primary
card_profile = default
# bluetooth sco
sco_output = output-bluetooth_sco
sco_input = input-bluetooth_sco_headset

# -------- Group section -------------------------------------------------------

[group]
name   = othermedia
flags  = route_audio, limit_volume, cork_stream

[group]
name   = idle
flags  = nopolicy
sink   = sink.null
source = sink.null.monitor

[group]
name   = background
flags  = limit_volume, cork_stream
sink   = $output_media_latency@equals:$output_equals
source = $input_builtin@equals:$input_equals

[group]
name   = systemsound
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = $output_media_latency@equals:$output_equals

[group]
name   = btnotify
flags  = set_sink, limit_volume, cork_stream, mute_by_route, dynamic_sink
sink   = startswith:"bluez_sink"

[group]
name   = feedbacksound
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = $output_low_latency@equals:$output_equals

[group]
name   = inputsound
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = $output_low_latency@equals:$output_equals

[group]
name   = event
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = $output_media_latency@equals:$output_equals

[group]
name   = alarm
flags  = set_sink, limit_volume, mute_by_route, cork_stream, media_notify
sink   = $output_media_latency@equals:$output_equals

[group]
name   = flash
flags  = limit_volume, cork_stream

[group]
name   = player
flags  = route_audio, limit_volume, cork_stream

[group]
name   = game
flags  = route_audio, limit_volume, cork_stream

[group]
name   = voiceui
flags  = set_sink, limit_volume, cork_stream
sink   = $output_low_latency@equals:$output_equals

[group]
name   = ringtone
flags  = set_sink, limit_volume, mute_by_route, cork_stream, media_notify
sink   = $output_media_latency@equals:$output_equals

[group]
name   = camera
flags  = set_sink, set_source, limit_volume, cork_stream
sink   = $output_media_latency@equals:$output_equals
source = $input_builtin@equals:$input_equals

[group]
name   = videoeditor
flags  = route_audio, limit_volume, cork_stream

[group]
name   = ipcall
flags  = set_sink, set_source, limit_volume, cork_stream
sink   = $output_low_latency@equals:$output_equals
source = $input_builtin@equals:$input_equals

[group]
name   = call
flags  = set_sink, set_source
sink   = $output_low_latency@equals:$output_equals
source = $input_builtin@equals:$input_equals

[group]
name   = navigator
flags  = set_sink, set_source
sink   = $output_media_latency@equals:$output_equals
source = $input_builtin@equals:$input_equals

[group]
name   = cstone
flags  = route_audio, set_source, limit_volume

[group]
name   = alwayson
flags  = set_sink, limit_volume, cork_stream
sink   = $output_media_latency@equals:$output_equals

[group]
name   = nonsilent
flags  = set_sink, limit_volume, cork_stream
sink   = $output_media_latency@equals:$output_equals

[group]
name   = internal
flags  = nopolicy
sink   = sink.null
source = source.null.monitor

[group]
name   = outgoing
flags  = route_audio

[group]
name   = incoming
flags  = route_audio

[group]
name   = alien
flags  = route_audio, limit_volume, mute_by_route

[group]
name   = aliencall
flags  = route_audio, limit_volume, mute_by_route

[group]
name   = probesink
flags  = set_sink, limit_volume, cork_stream
sink   = $output_media_latency@equals:$output_equals

# -------- Card section --------------------------------------------------------

# -------- Device section ------------------------------------------------------

[device]
type = tvoutandbta2dp
sink = startswith:"bluez_sink"

[device]
type  = ihfandheadset
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$twin_speaker_headset
flags = $sink_port_change_delay
delay = $delay_time

[device]
type  = ihfandheadset
source= $input_external@equals:$input_equals
ports = $input_external@equals:$input_equals->$input_wired_headset

[device]
type  = ihfandheadphone
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$twin_speaker_headphone
flags = $sink_port_change_delay
delay = $delay_time

[device]
type  = ihfandlineout
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$twin_speaker_lineout
flags = $sink_port_change_delay
delay = $delay_time

[device]
type  = bta2dp
sink  = startswith:"bluez_sink"
ports = $output_primary@equals:$output_equals->$output_speaker
flags = disable_notify

[device]
type  = bta2dpforalien
sink  = startswith:"bluez_sink"
ports = $output_primary@equals:$output_equals->$output_speaker
flags = disable_notify

[device]
type  = bthsp
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$sco_output
flags = disable_notify, refresh_always

[device]
type   = bthsp
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$sco_input
flags  = disable_notify, refresh_always

[device]
type  = bthspforcall
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$sco_output
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthspforcall
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$sco_input
flags  = disable_notify, refresh_always

[device]
type  = bthspforalien
sink  = $sink_class_voip@equals:$voip_equals
ports = $output_primary@equals:$output_equals->$sco_output
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthspforalien
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$sco_input
flags  = disable_notify, refresh_always

[device]
type  = bthfp
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$sco_output
flags = disable_notify, refresh_always

[device]
type   = bthfp
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$sco_input
flags  = disable_notify, refresh_always

[device]
type  = bthfpforcall
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$sco_output
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthfpforcall
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$sco_input
flags  = disable_notify, refresh_always

[device]
type  = bthfpforalien
sink  = $sink_class_voip@equals:$voip_equals
ports = $output_primary@equals:$output_equals->$sco_output
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthfpforalien
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$sco_input
flags  = disable_notify, refresh_always

[device]
type   = headset
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$input_wired_headset
flags  = disable_notify, refresh_always

[device]
type  = headset
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headset
flags = disable_notify, refresh_always, $sink_port_change_delay
delay = $delay_time

[device]
type  = headsetforcall
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headset
flags = refresh_always, delayed_port_change
delay = 200

[device]
type   = headsetforcall
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$input_wired_headset

[device]
type  = headsetforalien
sink  = $sink_class_voip@equals:$voip_equals
ports = $output_primary@equals:$output_equals->$output_wired_headset
flags = refresh_always

[device]
type   = headsetforalien
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$input_wired_headset

[device]
type  = headphone
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone
flags = disable_notify, refresh_always, $sink_port_change_delay
delay = $delay_time

[device]
type  = headphoneforcall
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone
flags = refresh_always, delayed_port_change
delay = 200

[device]
type  = headphoneforalien
sink  = $sink_class_voip@equals:$voip_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone
flags = refresh_always

[device]
type  = lineout
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone
flags = disable_notify, refresh_always, $sink_port_change_delay
delay = $delay_time

[device]
type  = lineoutforcall
sink  = $output_primary@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone
flags = refresh_always, delayed_port_change
delay = 200

[device]
type  = lineoutforalien
sink  = $sink_class_voip@equals:$voip_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone
flags = refresh_always

[device]
type  = ihfandtvout
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone

[device]
type  = tvout
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_wired_headphone

[device]
type   = microphone
source = $input_builtin@equals:$input_equals
ports  = $input_builtin@equals:$input_equals->$source_input_microphone

[device]
type   = backmicrophone
source = $input_builtin@equals:$input_equals
ports = $input_builtin@equals:$input_equals->$source_input_backmicrophone

[device]
type  = ihf
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_speaker
flags = refresh_always, $sink_port_change_delay
delay = $delay_time

[device]
type  = ihfforcall
sink  = $output_media_latency@equals:$output_equals
ports = $output_primary@equals:$output_equals->$output_speaker
flags = refresh_always

[device]
type  = ihfforalien
sink  = $sink_class_voip@equals:$voip_equals
ports = $output_primary@equals:$output_equals->$output_speaker
flags = refresh_always

[device]
type   = voicecall
source = $input_external@equals:$input_equals
ports  = $input_external@equals:$input_equals->$input_voice_call

[device]
type = null
sink = equals:sink.null

# -------- Stream section ------------------------------------------------------

[stream]
exe      = gst-launch-0.10
group    = player

[stream]
exe      = gst-launch-1.0
group    = player

[stream]
exe      = pacat
group    = player

# Ignore pulsesink probe from gstreamer pulsesink
# when a2dp is active, route probing to a2dp headset
[stream]
property = media.name@equals:"pulsesink probe"
sink     = bta2dp
group    = btnotify

# Ignore pulsesink probe from gstreamer pulsesink
[stream]
property = media.name@equals:"pulsesink probe"
group    = probesink

[stream]
exe      = ngfd
property = media.name@equals:"system-event"
sink     = bta2dp
group    = btnotify

[stream]
exe      = ngfd
property = event.id@equals:"message-new-email"
sink     = bta2dp
group    = btnotify

[stream]
exe      = ngfd
property = media.name@equals:"battery-event"
sink     = bta2dp
group    = btnotify

[stream]
property = application.process.arg0@equals:"/usr/bin/maliit-server"
group    = feedbacksound

[stream]
property = event.id@equals:"phone-incoming-call"
group    = ringtone

[stream]
property = event.id@equals:"alarm-clock-elapsed"
group    = alarm

[stream]
property = event.id@equals:"message-new-email"
group    = event

[stream]
exe      = ngfd
property = event.id@equals:"event-in-call"
group    = alwayson

[stream]
exe      = ngfd
property = media.name@equals:"event-in-call"
group    = alwayson

[stream]
exe      = ngfd
property = media.name@equals:"camera-event"
group    = camera

[stream]
exe      = ngfd
property = media.name@equals:"feedback-event"
group    = feedbacksound

[stream]
exe      = ngfd
property = media.name@equals:"system-event"
group    = systemsound

[stream]
exe      = ngfd
property = media.name@equals:"battery-event"
group    = systemsound

[stream]
exe   = telepathy-stream-engine
group = call

[stream]
property = application.process.arg0@equals:"/usr/lib/telepathy/telepathy-stream-engine"
group    = call

[stream]
property = media.name@equals:"indtone"
group    = cstone

[stream]
property = media.name@equals:"dtmf"
group    = cstone

[stream]
property = media.name@equals:"notiftone"
group    = nonsilent

[stream]
exe   = qmafw-dbus-wrapper
group = player

[stream]
name     = "Virtual Stream for MainVolume Volume Control"
group    = internal

[stream]
name  = "output of sink."
group = internal

[stream]
name  = "input of source."
group = internal

# For routing to sink.primaryandbluez
[stream]
property = media.name@startswith:"Simultaneous output on"
group    = internal

# -------- Context rule section ------------------------------------------------

[context-rule]
variable     = call
value        = equals:outgoing
set-property = module-name@equals:module-policy-enforcement, property:"x-nemo.voicecall.status", value@constant:"active"

[context-rule]
variable     = call
value        = equals:active
set-property = module-name@equals:module-policy-enforcement, property:"x-nemo.voicecall.status", value@constant:"active"

[context-rule]
variable     = call
value        = equals:inactive
set-property = module-name@equals:module-policy-enforcement, property:"x-nemo.voicecall.status", value@constant:"inactive"

[context-rule]
variable     = call
value        = equals:voip
set-property = module-name@equals:module-policy-enforcement, property:"x-nemo.voicecall.status", value@constant:"voip"

[context-rule]
variable     = media_state
value        = matches:"^[^t].*"
set-property = module-name@equals:module-policy-enforcement, property:"x-nemo.media.state", value@copy-from-context

[context-rule]
variable     = emergency_call
value        = matches:".*"
set-property = module-name@equals:module-policy-enforcement, property:"x.emergency_call.state", value@copy-from-context
